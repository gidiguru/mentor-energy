import { c as create_ssr_component, e as escape } from "../../../../../../chunks/ssr.js";
import "../../../../../../chunks/ProgressBar.svelte_svelte_type_style_lang.js";
const css = {
  code: ".card.svelte-1j8d17m{border-radius:0.5rem;border-width:1px;border-color:rgb(var(--color-surface-500) / 0.3);--tw-backdrop-blur:blur(16px);-webkit-backdrop-filter:var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);backdrop-filter:var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia)\n}",
  map: `{"version":3,"file":"+page.svelte","sources":["+page.svelte"],"sourcesContent":["<script lang=\\"ts\\">import { onMount } from \\"svelte\\";\\nimport { progressBar } from \\"@skeletonlabs/skeleton\\";\\nexport let data;\\nlet currentStep = 0;\\nlet userAnswers = {};\\nlet showFeedback = false;\\nlet isCorrect = false;\\nlet progress = 0;\\nconst content = [\\n  {\\n    type: \\"text\\",\\n    content: \\"Welcome to the Introduction to Petroleum Geology module.\\"\\n  },\\n  {\\n    type: \\"mcq\\",\\n    question: \\"Which of the following is NOT a type of hydrocarbon trap?\\",\\n    options: [\\n      \\"Structural trap\\",\\n      \\"Stratigraphic trap\\",\\n      \\"Crystalline trap\\",\\n      \\"Combination trap\\"\\n    ],\\n    correctAnswer: \\"Crystalline trap\\",\\n    correctFeedback: \\"Correct! Crystalline trap is not a real type of hydrocarbon trap.\\",\\n    incorrectFeedback: \\"That's not correct. Review the types of hydrocarbon traps.\\"\\n  },\\n  {\\n    type: \\"mcq\\",\\n    question: \\"What is the primary source rock for most petroleum deposits?\\",\\n    options: [\\n      \\"Sandstone\\",\\n      \\"Shale\\",\\n      \\"Limestone\\",\\n      \\"Granite\\"\\n    ],\\n    correctAnswer: \\"Shale\\",\\n    correctFeedback: \\"Correct! Shale is the most common source rock.\\",\\n    incorrectFeedback: \\"Not quite. Consider the organic content of different rocks.\\"\\n  }\\n];\\n$: progress = currentStep / content.length * 100;\\nfunction handleAnswer(answer) {\\n  userAnswers[currentStep] = answer;\\n  showFeedback = true;\\n  isCorrect = answer === content[currentStep].correctAnswer;\\n}\\nfunction handleNext() {\\n  showFeedback = false;\\n  if (currentStep < content.length - 1) {\\n    currentStep++;\\n  } else {\\n    handleComplete();\\n  }\\n}\\nfunction handleRetry() {\\n  showFeedback = false;\\n}\\nasync function handleComplete() {\\n  try {\\n    const response = await fetch(\\"/api/learning/complete-module\\", {\\n      method: \\"POST\\",\\n      headers: {\\n        \\"Content-Type\\": \\"application/json\\"\\n      },\\n      body: JSON.stringify({\\n        moduleId: data.moduleId,\\n        answers: userAnswers\\n      })\\n    });\\n    if (!response.ok) throw new Error(\\"Failed to save progress\\");\\n    alert(\\"Module completed successfully!\\");\\n    window.location.href = \\"/dashboard/learning-modules\\";\\n  } catch (error) {\\n    console.error(\\"Error completing module:\\", error);\\n    alert(\\"Failed to save progress. Please try again.\\");\\n  }\\n}\\n<\/script>\\r\\n  \\r\\n  <div class=\\"container mx-auto p-4\\">\\r\\n    <div class=\\"card p-6 max-w-3xl mx-auto\\">\\r\\n      <header class=\\"mb-6\\">\\r\\n        <a \\r\\n          href=\\"/dashboard/learning/modules\\" \\r\\n          class=\\"btn btn-sm variant-ghost mb-4\\"\\r\\n        >\\r\\n          ← Back to Modules\\r\\n        </a>\\r\\n        <h2 class=\\"h2\\">Introduction to Petroleum Geology</h2>\\r\\n        <div class=\\"flex items-center gap-2 mt-2\\">\\r\\n          <div class=\\"progress-bar w-full h-2 rounded-full bg-surface-200-700-token\\">\\r\\n            <div \\r\\n              class=\\"h-full bg-primary-500 rounded-full transition-all\\" \\r\\n              style=\\"width: {progress}%\\"\\r\\n            />\\r\\n          </div>\\r\\n          <span class=\\"text-sm whitespace-nowrap\\">\\r\\n            {currentStep + 1} of {content.length}\\r\\n          </span>\\r\\n        </div>\\r\\n      </header>\\r\\n  \\r\\n      <div class=\\"space-y-6\\">\\r\\n        {#if content[currentStep].type === 'text'}\\r\\n          <div class=\\"prose dark:prose-invert max-w-none\\">\\r\\n            <p>{content[currentStep].content}</p>\\r\\n          </div>\\r\\n          <button \\r\\n            class=\\"btn variant-filled-primary\\" \\r\\n            on:click={handleNext}\\r\\n          >\\r\\n            Continue\\r\\n          </button>\\r\\n        {:else if content[currentStep].type === 'mcq'}\\r\\n          <div class=\\"space-y-4\\">\\r\\n            <h3 class=\\"h3\\">{content[currentStep].question}</h3>\\r\\n            <div class=\\"grid gap-3\\">\\r\\n              {#each content[currentStep].options as option}\\r\\n                <button\\r\\n                  class=\\"btn {userAnswers[currentStep] === option ? \\r\\n                    'variant-filled-primary' : 'variant-ghost'} \\r\\n                    text-left p-4\\"\\r\\n                  on:click={() => handleAnswer(option)}\\r\\n                  disabled={showFeedback}\\r\\n                >\\r\\n                  {option}\\r\\n                </button>\\r\\n              {/each}\\r\\n            </div>\\r\\n          </div>\\r\\n        {/if}\\r\\n  \\r\\n        {#if showFeedback}\\r\\n          <div class=\\"card p-4 {isCorrect ? \\r\\n            'variant-glass-success' : \\r\\n            'variant-glass-error'}\\">\\r\\n            <p class=\\"font-medium\\">\\r\\n              {isCorrect ? \\r\\n                content[currentStep].correctFeedback : \\r\\n                content[currentStep].incorrectFeedback}\\r\\n            </p>\\r\\n            <div class=\\"mt-4\\">\\r\\n              {#if isCorrect}\\r\\n                <button \\r\\n                  class=\\"btn variant-filled-primary\\"\\r\\n                  on:click={handleNext}\\r\\n                >\\r\\n                  {currentStep === content.length - 1 ? 'Complete' : 'Next'}\\r\\n                </button>\\r\\n              {:else}\\r\\n                <button \\r\\n                  class=\\"btn variant-ghost\\"\\r\\n                  on:click={handleRetry}\\r\\n                >\\r\\n                  Try Again\\r\\n                </button>\\r\\n              {/if}\\r\\n            </div>\\r\\n          </div>\\r\\n        {/if}\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  \\r\\n  <style lang=\\"postcss\\">\\r\\n    .card {\\n    border-radius: 0.5rem;\\n    border-width: 1px;\\n    border-color: rgb(var(--color-surface-500) / 0.3);\\n    --tw-backdrop-blur: blur(16px);\\n    -webkit-backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);\\n    backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia)\\n}\\r\\n  </style>"],"names":[],"mappings":"AAqKI,oBAAM,CACN,aAAa,CAAE,MAAM,CACrB,YAAY,CAAE,GAAG,CACjB,YAAY,CAAE,IAAI,IAAI,mBAAmB,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CACjD,kBAAkB,CAAE,UAAU,CAC9B,uBAAuB,CAAE,IAAI,kBAAkB,CAAC,CAAC,IAAI,wBAAwB,CAAC,CAAC,IAAI,sBAAsB,CAAC,CAAC,IAAI,uBAAuB,CAAC,CAAC,IAAI,wBAAwB,CAAC,CAAC,IAAI,oBAAoB,CAAC,CAAC,IAAI,qBAAqB,CAAC,CAAC,IAAI,sBAAsB,CAAC,CAAC,IAAI,mBAAmB,CAAC,CAC/Q,eAAe,CAAE,IAAI,kBAAkB,CAAC,CAAC,IAAI,wBAAwB,CAAC,CAAC,IAAI,sBAAsB,CAAC,CAAC,IAAI,uBAAuB,CAAC,CAAC,IAAI,wBAAwB,CAAC,CAAC,IAAI,oBAAoB,CAAC,CAAC,IAAI,qBAAqB,CAAC,CAAC,IAAI,sBAAsB,CAAC,CAAC,IAAI,mBAAmB;AAC1Q"}`
};
const Page = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { data } = $$props;
  let currentStep = 0;
  let progress = 0;
  const content = [
    {
      type: "text",
      content: "Welcome to the Introduction to Petroleum Geology module."
    },
    {
      type: "mcq",
      question: "Which of the following is NOT a type of hydrocarbon trap?",
      options: [
        "Structural trap",
        "Stratigraphic trap",
        "Crystalline trap",
        "Combination trap"
      ],
      correctAnswer: "Crystalline trap",
      correctFeedback: "Correct! Crystalline trap is not a real type of hydrocarbon trap.",
      incorrectFeedback: "That's not correct. Review the types of hydrocarbon traps."
    },
    {
      type: "mcq",
      question: "What is the primary source rock for most petroleum deposits?",
      options: ["Sandstone", "Shale", "Limestone", "Granite"],
      correctAnswer: "Shale",
      correctFeedback: "Correct! Shale is the most common source rock.",
      incorrectFeedback: "Not quite. Consider the organic content of different rocks."
    }
  ];
  if ($$props.data === void 0 && $$bindings.data && data !== void 0) $$bindings.data(data);
  $$result.css.add(css);
  progress = currentStep / content.length * 100;
  return `<div class="container mx-auto p-4"><div class="card p-6 max-w-3xl mx-auto svelte-1j8d17m"><header class="mb-6"><a href="/dashboard/learning/modules" class="btn btn-sm variant-ghost mb-4" data-svelte-h="svelte-qsauxq">← Back to Modules</a> <h2 class="h2" data-svelte-h="svelte-s7lxh5">Introduction to Petroleum Geology</h2> <div class="flex items-center gap-2 mt-2"><div class="progress-bar w-full h-2 rounded-full bg-surface-200-700-token"><div class="h-full bg-primary-500 rounded-full transition-all" style="${"width: " + escape(progress, true) + "%"}"></div></div> <span class="text-sm whitespace-nowrap">${escape(currentStep + 1)} of ${escape(content.length)}</span></div></header> <div class="space-y-6">${`<div class="prose dark:prose-invert max-w-none"><p>${escape(content[currentStep].content)}</p></div> <button class="btn variant-filled-primary" data-svelte-h="svelte-1o378dq">Continue</button>`} ${``}</div></div> </div>`;
});
export {
  Page as default
};
