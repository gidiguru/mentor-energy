import { c as create_ssr_component } from "../../../../../../../chunks/ssr.js";
const css = {
  code: ".card.svelte-17nq6si{border-radius:0.5rem;border-width:1px;border-color:rgb(var(--color-surface-500) / 0.3);--tw-backdrop-blur:blur(16px);-webkit-backdrop-filter:var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);backdrop-filter:var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia)\n}",
  map: '{"version":3,"file":"+page.svelte","sources":["+page.svelte"],"sourcesContent":["<script lang=\\"ts\\">import { onMount } from \\"svelte\\";\\nimport ModuleNavigator from \\"$lib/components/learning/ModuleNavigator.svelte\\";\\nimport ModuleContent from \\"$lib/components/learning/ModuleContent.svelte\\";\\nexport let data;\\nlet currentSectionId = void 0;\\nlet currentPageId = void 0;\\nlet loading = true;\\nlet error = null;\\n$: currentSection = currentSectionId ? data.moduleContent.find((s) => s.id === currentSectionId) : void 0;\\n$: currentPage = currentSection && currentPageId ? currentSection.pages.find((p) => p.id === currentPageId) : void 0;\\nonMount(async () => {\\n  try {\\n    if (!data.session?.user?.id) {\\n      error = \\"No active session\\";\\n      loading = false;\\n      return;\\n    }\\n    const moduleContent = data.moduleContent || [];\\n    if (moduleContent.length === 0) {\\n      error = \\"No module content found\\";\\n      loading = false;\\n      return;\\n    }\\n    console.log(\\"Module Data:\\", data.module);\\n    console.log(\\"Module Progress:\\", data.progress);\\n    currentSectionId = data.progress?.current_section_id || data.moduleContent[0]?.id;\\n    if (currentSectionId) {\\n      const section = data.moduleContent.find((s) => s.id === currentSectionId);\\n      currentPageId = data.progress?.sections[currentSectionId]?.current_page_id || section?.pages[0]?.id;\\n    }\\n    loading = false;\\n  } catch (err) {\\n    console.error(\\"Module initialization error:\\", err);\\n    error = \\"Failed to load module content\\";\\n    loading = false;\\n  }\\n});\\nasync function handlePageComplete() {\\n  const userId = data.session?.user?.id;\\n  if (!userId || !currentSectionId || !currentPageId) return;\\n  try {\\n    await data.supabase.from(\\"page_progress\\").upsert({\\n      user_id: userId,\\n      module_id: data.module.id,\\n      section_id: currentSectionId,\\n      page_id: currentPageId,\\n      completed: true,\\n      last_completed_at: (/* @__PURE__ */ new Date()).toISOString()\\n    });\\n    const section = data.moduleContent.find((s) => s.id === currentSectionId);\\n    if (section && currentSectionId) {\\n      const progressSection = data.progress.sections[currentSectionId];\\n      const completedPages = section.pages.filter(\\n        (p) => progressSection?.pages[p.id]?.completed\\n      ).length;\\n      const overallProgress = Math.round(\\n        completedPages / section.pages.length * 100\\n      );\\n      await data.supabase.from(\\"section_progress\\").update({\\n        overall_progress: overallProgress,\\n        current_page_id: currentPageId\\n      }).eq(\\"section_id\\", currentSectionId).eq(\\"user_id\\", userId);\\n    }\\n  } catch (err) {\\n    console.error(\\"Detailed Module Initialization Error:\\", {\\n      error: err,\\n      module: data.module,\\n      progress: data.progress\\n    });\\n    error = `Failed to load module: ${err instanceof Error ? err.message : \\"Unknown error\\"}`;\\n  } finally {\\n    loading = false;\\n  }\\n}\\nfunction handleNavigate(sectionId, pageId) {\\n  currentSectionId = sectionId;\\n  currentPageId = pageId;\\n}\\n<\/script>\\r\\n\\r\\n{#if loading}\\r\\n  <div class=\\"container mx-auto p-4\\">\\r\\n    <p>Loading module...</p>\\r\\n  </div>\\r\\n{:else if error}\\r\\n  <div class=\\"container mx-auto p-4\\">\\r\\n    <p class=\\"text-error-500\\">{error}</p>\\r\\n  </div>\\r\\n{:else}\\r\\n  <div class=\\"container mx-auto px-4 py-8 space-y-6\\">\\r\\n    <div class=\\"card variant-soft p-4\\">\\r\\n      <h1 class=\\"h2\\">{data.module.title}</h1>\\r\\n      {#if data.module.description}\\r\\n        <p class=\\"text-sm mt-2\\">{data.module.description}</p>\\r\\n      {/if}\\r\\n    </div>\\r\\n\\r\\n    <div class=\\"card variant-soft p-4\\">\\r\\n      <ModuleNavigator \\r\\n        sections={data.moduleContent}\\r\\n        progress={data.progress}\\r\\n        currentSectionId={currentSectionId}\\r\\n        currentPageId={currentPageId}\\r\\n        onNavigate={handleNavigate}\\r\\n      />\\r\\n    </div>\\r\\n\\r\\n    {#if currentSection && currentPage}\\r\\n    <div class=\\"card variant-soft p-4 min-h-[400px]\\">\\r\\n      <ModuleContent \\r\\n      sections={data.moduleContent}\\r\\n      section={currentSection}\\r\\n      onComplete={handlePageComplete}\\r\\n      {currentPageId}\\r\\n      onNavigate={handleNavigate}\\r\\n    />\\r\\n      </div>\\r\\n    {/if}\\r\\n  </div>\\r\\n{/if}\\r\\n\\r\\n<style lang=\\"postcss\\">\\r\\n  .card {\\n    border-radius: 0.5rem;\\n    border-width: 1px;\\n    border-color: rgb(var(--color-surface-500) / 0.3);\\n    --tw-backdrop-blur: blur(16px);\\n    -webkit-backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);\\n    backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia)\\n}\\r\\n</style>"],"names":[],"mappings":"AA0HE,oBAAM,CACJ,aAAa,CAAE,MAAM,CACrB,YAAY,CAAE,GAAG,CACjB,YAAY,CAAE,IAAI,IAAI,mBAAmB,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CACjD,kBAAkB,CAAE,UAAU,CAC9B,uBAAuB,CAAE,IAAI,kBAAkB,CAAC,CAAC,IAAI,wBAAwB,CAAC,CAAC,IAAI,sBAAsB,CAAC,CAAC,IAAI,uBAAuB,CAAC,CAAC,IAAI,wBAAwB,CAAC,CAAC,IAAI,oBAAoB,CAAC,CAAC,IAAI,qBAAqB,CAAC,CAAC,IAAI,sBAAsB,CAAC,CAAC,IAAI,mBAAmB,CAAC,CAC/Q,eAAe,CAAE,IAAI,kBAAkB,CAAC,CAAC,IAAI,wBAAwB,CAAC,CAAC,IAAI,sBAAsB,CAAC,CAAC,IAAI,uBAAuB,CAAC,CAAC,IAAI,wBAAwB,CAAC,CAAC,IAAI,oBAAoB,CAAC,CAAC,IAAI,qBAAqB,CAAC,CAAC,IAAI,sBAAsB,CAAC,CAAC,IAAI,mBAAmB;AAC1Q"}'
};
const Page = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { data } = $$props;
  if ($$props.data === void 0 && $$bindings.data && data !== void 0) $$bindings.data(data);
  $$result.css.add(css);
  return `${`<div class="container mx-auto p-4" data-svelte-h="svelte-gwp6gd"><p>Loading module...</p></div>`}`;
});
export {
  Page as default
};
